-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Gallery.Object.GalleryNodeConnection exposing (..)

import Gallery.InputObject
import Gallery.Interface
import Gallery.Object
import Gallery.Scalar
import Gallery.ScalarCodecs
import Gallery.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Pagination data for this connection.
-}
pageInfo : SelectionSet decodesTo Gallery.Object.PageInfo -> SelectionSet decodesTo Gallery.Object.GalleryNodeConnection
pageInfo object_ =
    Object.selectionForCompositeField "pageInfo" [] object_ identity


{-| Contains the nodes in this connection.
-}
edges : SelectionSet decodesTo Gallery.Object.GalleryNodeEdge -> SelectionSet (List (Maybe decodesTo)) Gallery.Object.GalleryNodeConnection
edges object_ =
    Object.selectionForCompositeField "edges" [] object_ (identity >> Decode.nullable >> Decode.list)
