-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Gallery.Object.GalleryNodeEdge exposing (..)

import Gallery.InputObject
import Gallery.Interface
import Gallery.Object
import Gallery.Scalar
import Gallery.ScalarCodecs
import Gallery.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The item at the end of the edge
-}
node : SelectionSet decodesTo Gallery.Object.GalleryNode -> SelectionSet (Maybe decodesTo) Gallery.Object.GalleryNodeEdge
node object_ =
    Object.selectionForCompositeField "node" [] object_ (identity >> Decode.nullable)


{-| A cursor for use in pagination
-}
cursor : SelectionSet String Gallery.Object.GalleryNodeEdge
cursor =
    Object.selectionForField "String" "cursor" [] Decode.string
